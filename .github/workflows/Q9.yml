name: Check Deployment Status and Trigger Rollback

on:
  workflow_run:
    workflows: ["Q2.yml"]
    types:
      - completed

jobs:
  check-deployment:
    runs-on: ubuntu-latest
    outputs:
      deployment-status: ${{ steps.get_status.outputs.deployment_status }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get Last Deployment Status
        id: get_status
        run: |
         # Utilisation de l'API REST de GitHub pour obtenir les détails du dernier workflow
        status=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
        "https://api.github.com/repos/${{ github.repository }}/actions/workflows/deploy-docker.yml/runs?branch=main&per_page=1" | jq -r '.workflow_runs[0].conclusion')
        
        echo "::set-output name=status::$status"

  process-status:
    needs: check-status
    runs-on: ubuntu-latest
    steps:
    - name: Check Deployment Status
      run: |
        status=${{ needs.check-status.outputs.status }}
        echo "Last deployment status: $status"
        
   rollback:
    needs: check-deployment
    runs-on: ubuntu-latest
    if: ${{ $status == 'failure' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Redéployer la version précédente
      run: |
        docker pull my-docker-image:${{ env.PREVIOUS_VERSION }}
        docker tag my-docker-image:${{ env.PREVIOUS_VERSION }} ${{ secrets.DOCKER_USERNAME }}/my-docker-image:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/my-docker-image:latest
